/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EscrowJudge, EscrowJudgeInterface } from "../EscrowJudge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aiSigner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_challengeSecs",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CaseOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "Evidence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum EscrowJudge.Outcome",
        name: "outcome",
        type: "uint8",
      },
    ],
    name: "Finalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum EscrowJudge.Outcome",
        name: "outcome",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "justification",
        type: "string",
      },
    ],
    name: "Proposed",
    type: "event",
  },
  {
    inputs: [],
    name: "aiSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cases",
    outputs: [
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "evidenceClient",
        type: "string",
      },
      {
        internalType: "string",
        name: "evidenceProvider",
        type: "string",
      },
      {
        internalType: "string",
        name: "justification",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "deadline",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "proposedAt",
        type: "uint64",
      },
      {
        internalType: "enum EscrowJudge.Status",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "enum EscrowJudge.Outcome",
        name: "outcome",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeSecs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "party",
        type: "address",
      },
    ],
    name: "getPartyCaseIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "deadline",
        type: "uint64",
      },
      {
        internalType: "string[]",
        name: "initialEvidences",
        type: "string[]",
      },
    ],
    name: "openCase",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "enum EscrowJudge.Outcome",
        name: "outcome",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "justification",
        type: "string",
      },
    ],
    name: "proposeDecision",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "submitEvidence",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516129e13803806129e183398181016040528101906100329190610145565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050610185565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d2826100a7565b9050919050565b6100e2816100c7565b81146100ed57600080fd5b50565b6000815190506100ff816100d9565b92915050565b600067ffffffffffffffff82169050919050565b61012281610105565b811461012d57600080fd5b50565b60008151905061013f81610119565b92915050565b6000806040838503121561015c5761015b6100a2565b5b600061016a858286016100f0565b925050602061017b85828601610130565b9150509250929050565b61284d806101946000396000f3fe6080604052600436106100915760003560e01c8063a6a7f0eb11610059578063a6a7f0eb14610170578063ab82d9a014610199578063dde2b203146101c2578063f09790dd146101ff578063f789e0411461024657610091565b806305261aea1461009657806328cb2723146100bf5780632bfa0a0f146100ea57806361b8ce8c146101155780639b39b30214610140575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611611565b61026f565b005b3480156100cb57600080fd5b506100d4610667565b6040516100e19190611661565b60405180910390f35b3480156100f657600080fd5b506100ff610681565b60405161010c91906116bd565b60405180910390f35b34801561012157600080fd5b5061012a6106a5565b60405161013791906116e7565b60405180910390f35b61015a600480360381019061015591906117bf565b6106ab565b60405161016791906116e7565b60405180910390f35b34801561017c57600080fd5b5061019760048036038101906101929190611889565b610a86565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190611611565b610d09565b005b3480156101ce57600080fd5b506101e960048036038101906101e491906118e9565b610e88565b6040516101f691906119d4565b60405180910390f35b34801561020b57600080fd5b5061022660048036038101906102219190611611565b611104565b60405161023d9b9a99989796959493929190611b45565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611c2a565b611398565b005b60006002600083815260200190815260200160002090506001600381111561029a57610299611a86565b5b8160070160109054906101000a900460ff1660038111156102be576102bd611a86565b5b146102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590611cea565b60405180910390fd5b600060149054906101000a900467ffffffffffffffff168160070160089054906101000a900467ffffffffffffffff166103389190611d39565b67ffffffffffffffff164211610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a90611dc1565b60405180910390fd5b60038160070160106101000a81548160ff021916908360038111156103ab576103aa611a86565b5b0217905550600160028111156103c4576103c3611a86565b5b8160070160119054906101000a900460ff1660028111156103e8576103e7611a86565b5b036104c75760008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826003015460405161043b90611e12565b60006040518083038185875af1925050503d8060008114610478576040519150601f19603f3d011682016040523d82523d6000602084013e61047d565b606091505b50509050806104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b890611e73565b60405180910390fd5b50610619565b6002808111156104da576104d9611a86565b5b8160070160119054906101000a900460ff1660028111156104fe576104fd611a86565b5b036105dd5760008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826003015460405161055190611e12565b60006040518083038185875af1925050503d806000811461058e576040519150601f19603f3d011682016040523d82523d6000602084013e610593565b606091505b50509050806105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611edf565b60405180910390fd5b50610618565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611f4b565b60405180910390fd5b5b7f14b32513bc60303cd54741ac55d1169cbcdcf5a83e16d63a54a082bf3724999f828260070160119054906101000a900460ff1660405161065b929190611f6b565b60405180910390a15050565b600060149054906101000a900467ffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008034116106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611fe0565b60405180910390fd5b6001600081548092919061070290612000565b9190505590506040518061016001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013481526020016040518060200160405280600081525081526020016040518060200160405280600081525081526020016040518060200160405280600081525081526020018567ffffffffffffffff168152602001600067ffffffffffffffff168152602001600060038111156107e3576107e2611a86565b5b8152602001600060028111156107fc576107fb611a86565b5b8152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040190816109069190612283565b5060a082015181600501908161091c9190612283565b5060c08201518160060190816109329190612283565b5060e08201518160070160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101008201518160070160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101208201518160070160106101000a81548160ff021916908360038111156109be576109bd611a86565b5b02179055506101408201518160070160116101000a81548160ff021916908360028111156109ef576109ee611a86565b5b021790555090505060005b83839050811015610a4057610a3382858584818110610a1c57610a1b612355565b5b9050602002810190610a2e9190612393565b610a86565b80806001019150506109fa565b507f3d022cd54c993e402bf81e6ce52777301330d44387e0f85599ca061704b3133481338734604051610a7694939291906123f6565b60405180910390a1949350505050565b600060026000858152602001908152602001600020905060006003811115610ab157610ab0611a86565b5b8160070160109054906101000a900460ff166003811115610ad557610ad4611a86565b5b1480610b16575060016003811115610af057610aef611a86565b5b8160070160109054906101000a900460ff166003811115610b1457610b13611a86565b5b145b610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90612487565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c0257508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c38906124f3565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610cb1578282826004019182610cab92919061251e565b50610cc6565b8282826005019182610cc492919061251e565b505b7f39935cf45244bc296a03d6aef1cf17779033ee27090ce9c68d432367ce10699684338585604051610cfb949392919061262a565b60405180910390a150505050565b600060026000838152602001908152602001600020905060016003811115610d3457610d33611a86565b5b8160070160109054906101000a900460ff166003811115610d5857610d57611a86565b5b14610d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8f906126b6565b60405180910390fd5b600060149054906101000a900467ffffffffffffffff168160070160089054906101000a900467ffffffffffffffff16610dd29190611d39565b67ffffffffffffffff16421115610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590612722565b60405180910390fd5b60028160070160106101000a81548160ff02191690836003811115610e4657610e45611a86565b5b02179055507fcfe09ca25f55d949baba5e280f5750c9ba4b9048fca5532f916067d433afe4d78233604051610e7c929190612742565b60405180910390a15050565b6060600080600090505b600154811015610f8e578373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f6d57508373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610f81578180610f7d90612000565b9250505b8080600101915050610e92565b508067ffffffffffffffff811115610fa957610fa8612048565b5b604051908082528060200260200182016040528015610fd75781602001602082028036833780820191505090505b509150600080600090505b6001548110156110fc578473ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806110bd57508473ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156110ef57808483806110cf90612000565b9450815181106110e2576110e1612355565b5b6020026020010181815250505b8080600101915050610fe2565b505050919050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301549080600401805461119f906120a6565b80601f01602080910402602001604051908101604052809291908181526020018280546111cb906120a6565b80156112185780601f106111ed57610100808354040283529160200191611218565b820191906000526020600020905b8154815290600101906020018083116111fb57829003601f168201915b50505050509080600501805461122d906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611259906120a6565b80156112a65780601f1061127b576101008083540402835291602001916112a6565b820191906000526020600020905b81548152906001019060200180831161128957829003601f168201915b5050505050908060060180546112bb906120a6565b80601f01602080910402602001604051908101604052809291908181526020018280546112e7906120a6565b80156113345780601f1061130957610100808354040283529160200191611334565b820191906000526020600020905b81548152906001019060200180831161131757829003601f168201915b5050505050908060070160009054906101000a900467ffffffffffffffff16908060070160089054906101000a900467ffffffffffffffff16908060070160109054906101000a900460ff16908060070160119054906101000a900460ff1690508b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141d906127b7565b60405180910390fd5b60006002600086815260200190815260200160002090506000600381111561145157611450611a86565b5b8160070160109054906101000a900460ff16600381111561147557611474611a86565b5b14806114b65750600160038111156114905761148f611a86565b5b8160070160109054906101000a900460ff1660038111156114b4576114b3611a86565b5b145b6114f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ec90612487565b60405180910390fd5b838160070160116101000a81548160ff0219169083600281111561151c5761151b611a86565b5b0217905550828282600601918261153492919061251e565b50428160070160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160070160106101000a81548160ff0219169083600381111561158857611587611a86565b5b02179055507f681f37f53c168c3b2c1a2dea6746e8c6c5986ba533e0167b1b9f181a3c586a13858585856040516115c294939291906127d7565b60405180910390a15050505050565b600080fd5b600080fd5b6000819050919050565b6115ee816115db565b81146115f957600080fd5b50565b60008135905061160b816115e5565b92915050565b600060208284031215611627576116266115d1565b5b6000611635848285016115fc565b91505092915050565b600067ffffffffffffffff82169050919050565b61165b8161163e565b82525050565b60006020820190506116766000830184611652565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116a78261167c565b9050919050565b6116b78161169c565b82525050565b60006020820190506116d260008301846116ae565b92915050565b6116e1816115db565b82525050565b60006020820190506116fc60008301846116d8565b92915050565b61170b8161169c565b811461171657600080fd5b50565b60008135905061172881611702565b92915050565b6117378161163e565b811461174257600080fd5b50565b6000813590506117548161172e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261177f5761177e61175a565b5b8235905067ffffffffffffffff81111561179c5761179b61175f565b5b6020830191508360208202830111156117b8576117b7611764565b5b9250929050565b600080600080606085870312156117d9576117d86115d1565b5b60006117e787828801611719565b94505060206117f887828801611745565b935050604085013567ffffffffffffffff811115611819576118186115d6565b5b61182587828801611769565b925092505092959194509250565b60008083601f8401126118495761184861175a565b5b8235905067ffffffffffffffff8111156118665761186561175f565b5b60208301915083600182028301111561188257611881611764565b5b9250929050565b6000806000604084860312156118a2576118a16115d1565b5b60006118b0868287016115fc565b935050602084013567ffffffffffffffff8111156118d1576118d06115d6565b5b6118dd86828701611833565b92509250509250925092565b6000602082840312156118ff576118fe6115d1565b5b600061190d84828501611719565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61194b816115db565b82525050565b600061195d8383611942565b60208301905092915050565b6000602082019050919050565b600061198182611916565b61198b8185611921565b935061199683611932565b8060005b838110156119c75781516119ae8882611951565b97506119b983611969565b92505060018101905061199a565b5085935050505092915050565b600060208201905081810360008301526119ee8184611976565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a30578082015181840152602081019050611a15565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a58826119f6565b611a628185611a01565b9350611a72818560208601611a12565b611a7b81611a3c565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611ac657611ac5611a86565b5b50565b6000819050611ad782611ab5565b919050565b6000611ae782611ac9565b9050919050565b611af781611adc565b82525050565b60038110611b0e57611b0d611a86565b5b50565b6000819050611b1f82611afd565b919050565b6000611b2f82611b11565b9050919050565b611b3f81611b24565b82525050565b600061016082019050611b5b600083018e6116ae565b611b68602083018d6116ae565b611b75604083018c6116ae565b611b82606083018b6116d8565b8181036080830152611b94818a611a4d565b905081810360a0830152611ba88189611a4d565b905081810360c0830152611bbc8188611a4d565b9050611bcb60e0830187611652565b611bd9610100830186611652565b611be7610120830185611aee565b611bf5610140830184611b36565b9c9b505050505050505050505050565b60038110611c1257600080fd5b50565b600081359050611c2481611c05565b92915050565b60008060008060608587031215611c4457611c436115d1565b5b6000611c52878288016115fc565b9450506020611c6387828801611c15565b935050604085013567ffffffffffffffff811115611c8457611c836115d6565b5b611c9087828801611833565b925092505092959194509250565b7f6e6f742066696e616c697a61626c650000000000000000000000000000000000600082015250565b6000611cd4600f83611a01565b9150611cdf82611c9e565b602082019050919050565b60006020820190508181036000830152611d0381611cc7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d448261163e565b9150611d4f8361163e565b9250828201905067ffffffffffffffff811115611d6f57611d6e611d0a565b5b92915050565b7f77696e646f77206f70656e000000000000000000000000000000000000000000600082015250565b6000611dab600b83611a01565b9150611db682611d75565b602082019050919050565b60006020820190508181036000830152611dda81611d9e565b9050919050565b600081905092915050565b50565b6000611dfc600083611de1565b9150611e0782611dec565b600082019050919050565b6000611e1d82611def565b9150819050919050565b7f7061792070726f7669646572206661696c000000000000000000000000000000600082015250565b6000611e5d601183611a01565b9150611e6882611e27565b602082019050919050565b60006020820190508181036000830152611e8c81611e50565b9050919050565b7f726566756e6420636c69656e74206661696c0000000000000000000000000000600082015250565b6000611ec9601283611a01565b9150611ed482611e93565b602082019050919050565b60006020820190508181036000830152611ef881611ebc565b9050919050565b7f6e6f206f7574636f6d6500000000000000000000000000000000000000000000600082015250565b6000611f35600a83611a01565b9150611f4082611eff565b602082019050919050565b60006020820190508181036000830152611f6481611f28565b9050919050565b6000604082019050611f8060008301856116d8565b611f8d6020830184611b36565b9392505050565b7f6e6565642066756e647300000000000000000000000000000000000000000000600082015250565b6000611fca600a83611a01565b9150611fd582611f94565b602082019050919050565b60006020820190508181036000830152611ff981611fbd565b9050919050565b600061200b826115db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361203d5761203c611d0a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120be57607f821691505b6020821081036120d1576120d0612077565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121397fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120fc565b61214386836120fc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061218061217b612176846115db565b61215b565b6115db565b9050919050565b6000819050919050565b61219a83612165565b6121ae6121a682612187565b848454612109565b825550505050565b600090565b6121c36121b6565b6121ce818484612191565b505050565b5b818110156121f2576121e76000826121bb565b6001810190506121d4565b5050565b601f82111561223757612208816120d7565b612211846120ec565b81016020851015612220578190505b61223461222c856120ec565b8301826121d3565b50505b505050565b600082821c905092915050565b600061225a6000198460080261223c565b1980831691505092915050565b60006122738383612249565b9150826002028217905092915050565b61228c826119f6565b67ffffffffffffffff8111156122a5576122a4612048565b5b6122af82546120a6565b6122ba8282856121f6565b600060209050601f8311600181146122ed57600084156122db578287015190505b6122e58582612267565b86555061234d565b601f1984166122fb866120d7565b60005b82811015612323578489015182556001820191506020850194506020810190506122fe565b86831015612340578489015161233c601f891682612249565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126123b0576123af612384565b5b80840192508235915067ffffffffffffffff8211156123d2576123d1612389565b5b6020830192506001820236038313156123ee576123ed61238e565b5b509250929050565b600060808201905061240b60008301876116d8565b61241860208301866116ae565b61242560408301856116ae565b61243260608301846116d8565b95945050505050565b7f6261642073746174757300000000000000000000000000000000000000000000600082015250565b6000612471600a83611a01565b915061247c8261243b565b602082019050919050565b600060208201905081810360008301526124a081612464565b9050919050565b7f6e6f742070617274790000000000000000000000000000000000000000000000600082015250565b60006124dd600983611a01565b91506124e8826124a7565b602082019050919050565b6000602082019050818103600083015261250c816124d0565b9050919050565b600082905092915050565b6125288383612513565b67ffffffffffffffff81111561254157612540612048565b5b61254b82546120a6565b6125568282856121f6565b6000601f8311600181146125855760008415612573578287013590505b61257d8582612267565b8655506125e5565b601f198416612593866120d7565b60005b828110156125bb57848901358255600182019150602085019450602081019050612596565b868310156125d857848901356125d4601f891682612249565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b60006126098385611a01565b93506126168385846125ee565b61261f83611a3c565b840190509392505050565b600060608201905061263f60008301876116d8565b61264c60208301866116ae565b818103604083015261265f8184866125fd565b905095945050505050565b7f6e6f742070726f706f7365640000000000000000000000000000000000000000600082015250565b60006126a0600c83611a01565b91506126ab8261266a565b602082019050919050565b600060208201905081810360008301526126cf81612693565b9050919050565b7f77696e646f77206f766572000000000000000000000000000000000000000000600082015250565b600061270c600b83611a01565b9150612717826126d6565b602082019050919050565b6000602082019050818103600083015261273b816126ff565b9050919050565b600060408201905061275760008301856116d8565b61276460208301846116ae565b9392505050565b7f6e6f742061690000000000000000000000000000000000000000000000000000600082015250565b60006127a1600683611a01565b91506127ac8261276b565b602082019050919050565b600060208201905081810360008301526127d081612794565b9050919050565b60006060820190506127ec60008301876116d8565b6127f96020830186611b36565b818103604083015261280c8184866125fd565b90509594505050505056fea264697066735822122030acbfe54ba0762b8e166f077c9c94df40ff6e06b483c0a541859b7d87ab29a764736f6c634300081c0033";

type EscrowJudgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowJudgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowJudge__factory extends ContractFactory {
  constructor(...args: EscrowJudgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _aiSigner: AddressLike,
    _challengeSecs: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _aiSigner,
      _challengeSecs,
      overrides || {}
    );
  }
  override deploy(
    _aiSigner: AddressLike,
    _challengeSecs: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_aiSigner, _challengeSecs, overrides || {}) as Promise<
      EscrowJudge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowJudge__factory {
    return super.connect(runner) as EscrowJudge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowJudgeInterface {
    return new Interface(_abi) as EscrowJudgeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EscrowJudge {
    return new Contract(address, _abi, runner) as unknown as EscrowJudge;
  }
}
